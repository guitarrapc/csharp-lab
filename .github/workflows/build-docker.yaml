name: Build Docker

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      push-image:
        type: boolean
        description: "push-image: true - build and push image. false - build only."
        required: true
        default: false
  schedule:
    - cron: 0 0 * * 0 # At AM9:00 JST on Subday
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  DOCKER_BUILDKIT: "1"
  DOCKER_PUSH_ENABLED: "${{ github.event.inputs.push-image == 'true' && 'true' || (github.event_name == 'push' || github.event_name == 'schedule') }}"

jobs:
  find:
    outputs:
      build_matrix: ${{ steps.find.outputs.build_matrix }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Create Matrix JSON with Dockerfile Projects
        id: find
        run: |
          json=$(find src -name Dockerfile -exec dirname {} \; | jq -R -s -c '
            split("\n") | map(select(length > 0)) |
            map({
              project: (split("/")[2]),
              dockerfile: (. + "/Dockerfile"),
              tag: (split("/")[1] | ascii_downcase)
            }) |
            { include: . }
          ')
          echo "build_matrix=$json" | tee -a "$GITHUB_OUTPUT"

  docker:
    needs: [find]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find.outputs.build_matrix) }}
      # expected matrix format is as follows (YAML sample)
      # include:
      #   - project: ApiMultiplePort
      #     dockerfile: ./src/Api/ApiMultiplePort/Dockerfile
      #     tag: api
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: guitarrapc/actions/.github/actions/git-shortsha@main
        id: sha
      - uses: guitarrapc/actions/.github/actions/to-lower@main
        id: lower
        with:
          value: ${{ matrix.project }}
      # docker push
      - if: ${{ env.DOCKER_PUSH_ENABLED == 'true' }}
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.SYNCED_DOCKER_USER }}
          password: ${{ secrets.SYNCED_DOCKER_PASS }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Build and push (latest)
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ env.DOCKER_PUSH_ENABLED == 'true' }}
          file: "${{ matrix.dockerfile }}"
          tags: "${{ steps.lower.outputs.repository }}:latest-${{ matrix.tag }}-${{ steps.lower.outputs.value }}"
      - name: Build and push (tag)
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ env.DOCKER_PUSH_ENABLED == 'true' }}
          file: "${{ matrix.dockerfile }}"
          tags: "${{ steps.lower.outputs.repository }}:${{ steps.sha.outputs.sha-short }}-${{ matrix.tag }}-${{ steps.lower.outputs.value }}"

  dotnet:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: guitarrapc/actions/.github/actions/git-shortsha@main
        id: sha
      # docker push
      - if: ${{ env.DOCKER_PUSH_ENABLED == 'true' }}
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.SYNCED_DOCKER_USER }}
          password: ${{ secrets.SYNCED_DOCKER_PASS }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - uses: guitarrapc/actions/.github/actions/setup-dotnet@main
        with:
          restore-wasm-workload: false
      - name: dotnet publish (latest)
        if: ${{ env.DOCKER_PUSH_ENABLED == 'true' }}
        run: dotnet publish -c Release -p:ContainerImageTag="latest-container-containerconsolesdk" -p:ContainerRegistry=docker.io /t:PublishContainer
        working-directory: src/Container/ContainerConsoleSdk
      - name: dotnet publish (tag)
        if: ${{ env.DOCKER_PUSH_ENABLED == 'true' }}
        run: dotnet publish -c Release -p:ContainerImageTag="${{ steps.sha.outputs.sha-short }}-container-containerconsolesdk" -p:ContainerRegistry=docker.io /t:PublishContainer
        working-directory: src/Container/ContainerConsoleSdk
