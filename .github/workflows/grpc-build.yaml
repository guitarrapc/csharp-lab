name: Grpc Build

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 0 # At 00:00 on Sunday.
  push:
    branches:
      - "main"
    paths:
      - "src/Grpc/**/*"
  pull_request:
    branches:
      - "main"
    paths:
      - "src/Grpc/**/*"

env:
  BUILD_CONFIG: Release
  DIR_NAME: Grpc
  TAG_NAME: grpc

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        project: ["GrpcAspNetCore60", "GrpcAspNetCore60.HealthCheckSupport"]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Environment Variables
        uses: ./.github/actions/prepare-env
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - run: dotnet --version
      - run: dotnet --list-sdks
      - name: dotnet build
        run: dotnet build ./src/${{ env.DIR_NAME }}/${{ matrix.project}}/${{ matrix.project }}.csproj -c ${{ env.BUILD_CONFIG }}

  docker:
    strategy:
      fail-fast: false
      matrix:
        project: ["GrpcAspNetCore60", "GrpcAspNetCore60.HealthCheckSupport"]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Environment Variables
        uses: ./.github/actions/prepare-env
      - id: repository
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}
      - id: project
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ matrix.project }}
      - name: docker build
        run: docker build -t "${{ env.REPOSITORY }}:latest-${{ env.TAG_NAME }}-${{ steps.project.outputs.lowercase }}" -f "src/${{ env.DIR_NAME }}/${{ matrix.project}}/Dockerfile" .
        env:
          REPOSITORY: ${{ steps.repository.outputs.lowercase }}
      # docker push
      - if: ${{ github.event_name == 'push' }}
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.SYNCED_DOCKER_USER }}
          password: ${{ secrets.SYNCED_DOCKER_PASS }}
      - if: ${{ github.event_name == 'push' }}
        name: docker push (latest)
        run: docker push "${{ env.REPOSITORY }}:latest-${{ env.TAG_NAME }}-${{ steps.project.outputs.lowercase }}"
        env:
          REPOSITORY: ${{ steps.repository.outputs.lowercase }}
      - if: ${{ github.event_name == 'push' }}
        name: docker push (tag)
        run: |
          VERSION=$(git log -1 --pretty=%h)
          docker tag "${{ env.REPOSITORY }}:latest-${{ env.TAG_NAME }}-${{ steps.project.outputs.lowercase }}" "${{ env.REPOSITORY }}:${VERSION}${{ env.IMAGETAG_NEW }}"
          docker push "${{ env.REPOSITORY }}:${VERSION}-${{ env.TAG_NAME }}-${{ steps.project.outputs.lowercase }}"
        env:
          REPOSITORY: ${{ steps.repository.outputs.lowercase }}
