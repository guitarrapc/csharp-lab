name: Grpc Build

on:
  workflow_dispatch:
    inputs:
      push-image:
        type: boolean
        description: "push-image: true - build and push image. false - build only."
        required: true
        default: false
  schedule:
    - cron: 0 0 * * 0 # At 00:00 on Sunday.
  push:
    branches:
      - "main"
    paths:
      - "src/Grpc/**/*"
      - ".github/workflows/grpc-build.yaml"
  pull_request:
    branches:
      - "main"
    paths:
      - "src/Grpc/**/*"
      - ".github/workflows/grpc-build.yaml"

env:
  DOCKER_PUSH_ENABLED: "${{ github.event.inputs.push-image == 'true' && 'true' || (github.event_name == 'push' || github.event_name == 'schedule') }}"
  BUILD_CONFIG: Release
  DIR_NAME: Grpc
  DOCKER_TAG_NAME: grpc

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        project:
          [
            "GrpcApiService",
            "GrpcAspNetCore60",
            "GrpcAspNetCore60.HealthCheckSupport",
          ]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Prepare .NET
        uses: ./.github/actions/prepare-dotnet
      - name: dotnet build
        run: dotnet build ./src/${{ env.DIR_NAME }}/${{ matrix.project}}/${{ matrix.project }}.csproj -c ${{ env.BUILD_CONFIG }}
      - name: dotnet test
        run: |
          [[ "${{ matrix.project }}" == *Tests ]] && dotnet test ./src/${{ env.DIR_NAME }}/${{ matrix.project}}/${{ matrix.project }}.csproj -c ${{ env.BUILD_CONFIG }}
      - name: Run benchmark
        run: |
          if [[ "${{ matrix.project }}" == *Benchmark ]]; then
            dotnet run --project ./src/${{ env.DIR_NAME }}/${{ matrix.project}}/${{ matrix.project }}.csproj -c ${{ env.BUILD_CONFIG }}
            cat ./BenchmarkDotNet.Artifacts/results/${{ matrix.project }}.Benchmarks-report-github.md >> "$GITHUB_STEP_SUMMARY"
          fi

  docker:
    strategy:
      fail-fast: false
      matrix:
        project:
          [
            "GrpcApiService",
            "GrpcAspNetCore60",
            "GrpcAspNetCore60.HealthCheckSupport",
          ]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Environment Variables
        uses: ./.github/actions/prepare-env
      - name: Lowercase Environment Variables
        uses: ./.github/actions/lower-env
        with:
          project: ${{ matrix.project }}
      - name: docker build
        run: docker build -t "${{ env.REPOSITORY }}:latest-${{ env.DOCKER_TAG_NAME }}-${{ env.PROJECT }}" -f "src/${{ env.DIR_NAME }}/${{ matrix.project}}/Dockerfile" .
      # docker push
      - if: ${{ env.DOCKER_PUSH_ENABLED == 'true' }}
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.SYNCED_DOCKER_USER }}
          password: ${{ secrets.SYNCED_DOCKER_PASS }}
      - if: ${{ env.DOCKER_PUSH_ENABLED == 'true' }}
        name: docker push (latest)
        run: docker push "${{ env.REPOSITORY }}:latest-${{ env.DOCKER_TAG_NAME }}-${{ env.PROJECT }}"
      - if: ${{ env.DOCKER_PUSH_ENABLED == 'true' }}
        name: docker push (tag)
        run: |
          docker tag "${{ env.REPOSITORY }}:latest-${{ env.DOCKER_TAG_NAME }}-${{ env.PROJECT }}" "${{ env.REPOSITORY }}:${{ env.GITHUB_SHA_SHORT }}-${{ env.DOCKER_TAG_NAME }}-${{ env.PROJECT }}"
          docker push "${{ env.REPOSITORY }}:${{ env.GITHUB_SHA_SHORT }}-${{ env.DOCKER_TAG_NAME }}-${{ env.PROJECT }}"
