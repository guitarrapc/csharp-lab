name: Grpc Build

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 0 # At 00:00 on Sunday.
  push:
    branches:
      - "main"
    paths-ignore:
      - "*.md"
  pull_request:
    branches:
      - "main"
    paths-ignore:
      - "*.md"

env:
  BUILD_CONFIG: Release
  DOTNET_VERSION: 6.0.x
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        project: ["AspNetCore60", "AspNetCore60.HealthCheckSupport"]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - run: dotnet --version
      - run: dotnet --list-sdks
      - name: dotnet build
        run: dotnet build ./src/Grpc/${{ matrix.project}}/${{ matrix.project }}.csproj -c ${{ env.BUILD_CONFIG }}

  docker:
    strategy:
      fail-fast: false
      matrix:
        project: ["AspNetCore60", "AspNetCore60.HealthCheckSupport"]
    env:
      DOCKER_BUILDKIT: 1
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - id: repository
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}
      - id: project
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ matrix.project }}
      - name: docker build
        run: docker build -t "${{ env.REPOSITORY }}:${{ env.IMAGETAG }}" -f ${{ matrix.project}}/Dockerfile .
        working-directory: ./src/Grpc
        env:
          REPOSITORY: ${{ steps.repository.outputs.lowercase }}
          IMAGETAG: latest-grpc-${{ steps.project.outputs.lowercase }}
      # docker push
      - if: ${{ github.event_name == 'push' }}
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.SYNCED_DOCKER_USER }}
          password: ${{ secrets.SYNCED_DOCKER_PASS }}
      - if: ${{ github.event_name == 'push' }}
        name: docker push (latest)
        run: docker push -t "${{ env.REPOSITORY }}:${{ env.IMAGETAG }}"
        working-directory: ./src/Grpc
        env:
          REPOSITORY: ${{ steps.repository.outputs.lowercase }}
          IMAGETAG: latest-grpc-${{ steps.project.outputs.lowercase }}
      - if: ${{ github.event_name == 'push' }}
        name: docker push (tag)
        run: |
          VERSION=$(git log -1 --pretty=%h)
          docker tag "${{ env.REPOSITORY }}:${{ env.IMAGETAG }}" "${{ env.REPOSITORY }}:${VERSION}${{ env.IMAGETAG_NEW }}"
          docker push -t "${{ env.REPOSITORY }}:${VERSION}${{ env.IMAGETAG_NEW }}"
        working-directory: ./src/Grpc
        env:
          REPOSITORY: ${{ steps.repository.outputs.lowercase }}
          IMAGETAG: latest-grpc-${{ steps.project.outputs.lowercase }}
          IMAGETAG_NEW: -grpc-${{ steps.project.outputs.lowercase }}
