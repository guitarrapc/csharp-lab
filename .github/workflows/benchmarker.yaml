name: Benchmarker

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 0 # At AM9:00 JST on Subday
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  BUILD_CONFIG: Release
  SKIP_CPU: Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz # Q4 2016, too slow to benchmark. Skip benchmark if detected.
  TEMP_UPLOAD_PATH: ./BenchmarkDotNet.Artifacts/outputs

jobs:
  benchmark:
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: Logger.Benchmark
            path: src/Logger
          - project: Logic.Benchmark
            path: src/Logic
          - project: MemoryLeak.Benchmark
            path: src/MemoryLeak
          - project: Serialization.Benchmark
            path: src/Serialization
          - project: Strings.Benchmark
            path: src/Strings
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - name: CPU Detection
        id: cpu
        run: |
          cpu=$(less /proc/cpuinfo | grep -m 1 'model name' | cut -f 2 -d ":")
          cores=$(grep 'cpu cores' /proc/cpuinfo | uniq | cut -d':' -f2)
          echo "name=${cpu:1}" | tee -a "${GITHUB_OUTPUT}"
          echo "cores=$(( 1 * cores ))"
          echo "threads=$(grep -c processor /proc/cpuinfo)"
          echo "execute=$([[ "${cpu:1}" != "${{ env.SKIP_CPU }}" ]] && echo 1 || echo 0)" | tee -a "${GITHUB_OUTPUT}"
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: guitarrapc/actions/.github/actions/setup-dotnet@main
        with:
          restore-wasm-workload: true
      - name: dotnet build
        run: dotnet build ./${{ matrix.path }}/${{ matrix.project }}/${{ matrix.project }}.csproj -c ${{ env.BUILD_CONFIG }}
      - name: Run benchmark
        if: ${{ steps.cpu.outputs.execute == 1 }}
        run: |
          dotnet run --project ./${{ matrix.path }}/${{ matrix.project }}/${{ matrix.project }}.csproj -c ${{ env.BUILD_CONFIG }} --framework net9.0
          mkdir -p ${{ env.TEMP_UPLOAD_PATH }}/${{ matrix.path }}/${{ matrix.project }}
          while read -r file; do
            bench_name=$(echo "$file" | cut -d '/' -f 4 | cut -d '-' -f 1)
            output_path="${{ env.TEMP_UPLOAD_PATH }}/${{ matrix.path }}/${{ matrix.project }}/${bench_name}.md"

            echo "Write '$bench_name' in '$file' to GITHUB_STEP_SUMMARY"
            echo "## $bench_name" >> "$GITHUB_STEP_SUMMARY"
            cat "$file" >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"

            echo "Write '$file' to outputs"
            cat "$file" > "$output_path"
            echo "${{ matrix.path }}/${{ matrix.project }}/README.${bench_name}.md" | tee "${output_path}.path"
          done <<< "$(find "./BenchmarkDotNet.Artifacts/results" -name "*.md" -type f)"
