name: Benchmarker

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 0 # At AM9:00 JST on Subday
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  BUILD_CONFIG: Release
  SKIP_CPU: Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz # Q4 2016, too slow to benchmark. Skip benchmark if detected.
  TEMP_UPLOAD_PATH: ./BenchmarkDotNet.Artifacts/outputs

jobs:
  benchmark:
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: Logger.Benchmark
            path: src/Logger
          - project: Logic.Benchmark
            path: src/Logic
          - project: MemoryLeak.Benchmark
            path: src/MemoryLeak
          - project: Serialization.Benchmark
            path: src/Serialization
          - project: Strings.Benchmark
            path: src/Strings
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - name: CPU Detection
        id: cpu
        run: |
          cpu=$(less /proc/cpuinfo | grep -m 1 'model name' | cut -f 2 -d ":")
          cores=$(grep 'cpu cores' /proc/cpuinfo | uniq | cut -d':' -f2)
          echo "name=${cpu:1}" | tee -a "${GITHUB_OUTPUT}"
          echo "cores=$(( 1 * cores ))"
          echo "threads=$(grep -c processor /proc/cpuinfo)"
          echo "execute=$([[ "${cpu:1}" != "${{ env.SKIP_CPU }}" ]] && echo 1 || echo 0)" | tee -a "${GITHUB_OUTPUT}"
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: guitarrapc/actions/.github/actions/setup-dotnet@main
        with:
          restore-wasm-workload: true
      - name: dotnet build
        run: dotnet build ./${{ matrix.path }}/${{ matrix.project }}/${{ matrix.project }}.csproj -c ${{ env.BUILD_CONFIG }}
      - name: Run benchmark
        if: ${{ steps.cpu.outputs.execute == 1 }}
        run: |
          dotnet run --project ./${{ matrix.path }}/${{ matrix.project }}/${{ matrix.project }}.csproj -c ${{ env.BUILD_CONFIG }} --framework net9.0
          mkdir -p ${{ env.TEMP_UPLOAD_PATH }}/${{ matrix.path }}/${{ matrix.project }}
          while read -r file; do
            bench_name=$(echo "$file" | cut -d '/' -f 4 | cut -d '-' -f 1)
            output_path="${{ env.TEMP_UPLOAD_PATH }}/${{ matrix.path }}/${{ matrix.project }}/${bench_name}.md"

            echo "Write '$bench_name' in '$file' to GITHUB_STEP_SUMMARY"
            echo "## $bench_name" >> "$GITHUB_STEP_SUMMARY"
            cat "$file" >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"

            echo "Write '$file' to outputs"
            cat "$file" > "$output_path"
            echo "${{ matrix.path }}/${{ matrix.project }}/README.${bench_name}.md" | tee "${output_path}.path"
          done <<< "$(find "./BenchmarkDotNet.Artifacts/results" -name "*.md" -type f)"
      - name: Skip benchmark
        if: ${{ steps.cpu.outputs.execute == 0 }}
        run: mkdir -p ${{ env.TEMP_UPLOAD_PATH }} && echo "" >> ${{ env.TEMP_UPLOAD_PATH }}/dummy.md # dummy file to upload
      - name: Upload summary
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "benchmarks-${{ matrix.project }}"
          path: ${{ env.TEMP_UPLOAD_PATH }}/
          retention-days: 1

  # run except pull_request only
  update-doc:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [benchmark]
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Remove existing README.md
        run: rm -f src/**/*Benchmark*md

      - name: Download Logger.Benchmark
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: ${{ env.TEMP_UPLOAD_PATH }}/
          merge-multiple: true # merge all artifacts into one folder

      - name: Write summary to README.md
        run: |
          ls -lR "${{ env.TEMP_UPLOAD_PATH }}/"
          while read -r file; do
            echo "Processing ${file}."
            md_path=$(head -n 1 "${file}.path")
            cat "$file" > "$md_path"
          done <<< "$(find "${{ env.TEMP_UPLOAD_PATH }}/" ! -name "dummy.md" -name "*.md" -type f)"
      - name: commit & push
        id: commit-and-push
        run: |
          git remote set-url origin "https://github-actions:${GITHUB_TOKEN}@github.com/${{ github.repository }}"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ $(git diff) -eq 0 ]]; then
            exit 0
          fi

          git add .
          git commit -m "[auto commit] Benchmark result updated."
          git push

          revision=$(git rev-parse HEAD)
          echo "REVISION=$revision" >> $GITHUB_OUTPUT
